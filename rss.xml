<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Galih Blog]]></title><description><![CDATA[A starter blog demonstrating what Gatsby can do.]]></description><link>https://gatsby-starter-blog-demo.netlify.app</link><generator>GatsbyJS</generator><lastBuildDate>Tue, 22 Mar 2022 04:03:46 GMT</lastBuildDate><item><title><![CDATA[About Me]]></title><description><![CDATA[Twitter @gpwisnujati
Github galihprad
ðŸ“© galih.p.w.j@gmail.com Assalamuâ€™alaikum. I am Galih, Front-End/JavaScript Developer from Yogyakartaâ€¦]]></description><link>https://gatsby-starter-blog-demo.netlify.app/about/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/about/</guid><content:encoded>&lt;p&gt;&lt;img src=&quot;/5fcad9cb6687049fe80fc9d93aab1442/icons8-twitter.svg&quot; alt=&quot;Twitter&quot;&gt; &lt;a href=&quot;https://twitter.com/gpwisnujati&quot;&gt;@gpwisnujati&lt;/a&gt;
&lt;img src=&quot;/ecc8576edb84c01c80b0bdd47050b396/icons8-github.svg&quot; alt=&quot;Github&quot;&gt; &lt;a href=&quot;https://github.com/galihprad&quot;&gt;galihprad&lt;/a&gt;
ðŸ“© galih.p.w.j@gmail.com&lt;/p&gt;
&lt;p&gt;Assalamuâ€™alaikum. I am Galih, Front-End/JavaScript Developer from &lt;a href=&quot;https://id.wikipedia.org/wiki/Daerah_Istimewa_Yogyakarta&quot;&gt;Yogyakarta&lt;/a&gt;, Indonesia ðŸ‡®ðŸ‡©.&lt;/p&gt;
&lt;p&gt;âš½ Play futsal and football in spare time&lt;/p&gt;
&lt;p&gt;ðŸŽ‰ @arsenal @acmilan&lt;/p&gt;</content:encoded></item><item><title><![CDATA[Dibalik 'Error : Cannot read property 'map' of undefined']]></title><description><![CDATA[Ketika sedang mendevelop aplikasi web berbasis React JS, seringkali kita mendapatkan pesan error seperti berikut : Apa sebenarnya yangâ€¦]]></description><link>https://gatsby-starter-blog-demo.netlify.app/error-map/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/error-map/</guid><pubDate>Wed, 09 Mar 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;Ketika sedang mendevelop aplikasi web berbasis React JS, seringkali kita mendapatkan pesan error seperti berikut :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error : Cannot read property &amp;#39;map&amp;#39; of undefined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Apa sebenarnya yang terjadi, apa penyebabnya, dan bagaimana solusinya?
check it out&lt;/p&gt;
&lt;h4&gt;Apa penyebabnya?&lt;/h4&gt;
&lt;p&gt;Pada JavaScript, &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; adalah properti yang &lt;strong&gt;HANYA&lt;/strong&gt; dimiliki oleh variabel dengan tipe data &lt;em&gt;array&lt;/em&gt;. Sehingga jika terdapat variabel selain &lt;em&gt;array&lt;/em&gt;, lalu dikenai &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; maka akan muncul pesan &lt;em&gt;error&lt;/em&gt;. Contoh :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;some string&quot;&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// ERROR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// TIDAK ERROR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;walaupun array kosong, tidak akan menghasilkan &lt;em&gt;error&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// TIDAK ERROR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Nah, sekarang jika variabel dengan tipe data &lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt; dikenai &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; maka akan muncul pesan error &lt;strong&gt;seperti pada judul artikel ini&lt;/strong&gt; .
Seperti pada contoh berikut ini:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// ERROR&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Cannot read property &apos;map&apos; of undefined&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Itulah makna dari kata-kata :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error : Cannot read property &amp;#39;map&amp;#39; of undefined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;blockquote&gt;
&lt;p&gt;Saya sudah meng-assign array ke variabel tersebut, tapi kenapa tetap muncul pesan error tersebut?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Kasus-kasus seperti ini yang sering terjadi ketika sedang mendevelop aplikasi web berbasis React JS. Pertanyaanya adalah, mana yang lebih dulu berjalan? Apakah &lt;em&gt;assign&lt;/em&gt;-nya dulu atau &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; nya dulu? Jangan-jangan ketika &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; nya dijalankan, variablenya belum di-&lt;em&gt;assign&lt;/em&gt; dengan sebuah &lt;em&gt;array&lt;/em&gt;?&lt;/p&gt;
&lt;p&gt;Mari kita tinjau contoh komponen berikut:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;buah&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setBuah&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        fetchData&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setBuah&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;// res.data berisi array&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; buah&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; item &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Pada contoh di atas, kita sudah meng-&lt;em&gt;assign&lt;/em&gt; variabel &lt;code class=&quot;language-text&quot;&gt;buah&lt;/code&gt; dengan sebuah &lt;em&gt;array&lt;/em&gt;, namun akan tetap muncul pesan &lt;em&gt;error&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error : Cannot read property &amp;#39;map&amp;#39; of undefined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Kenapa bisa begitu?&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ingat bahwa pada React JS, &lt;code class=&quot;language-text&quot;&gt;useEffect&lt;/code&gt; baru dieksekusi SETELAH render.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Jadi ketika komoponen di atas dipanggil, pertama-tama React akan merender komponen tersebut (termasuk pada bagian &lt;code class=&quot;language-text&quot;&gt;buah.map(...)&lt;/code&gt; ). Setelah render yang pertama, React baru menjalankan &lt;code class=&quot;language-text&quot;&gt;useEffect&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;Sehingga ketika &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; nya dijalankan, variablenya BELUM di-&lt;em&gt;assign&lt;/em&gt; dengan sebuah &lt;em&gt;array&lt;/em&gt;. Itulah mengapa muncul pesan error tersebut&lt;/p&gt;
&lt;h4&gt;Bagaimana solusinya?&lt;/h4&gt;
&lt;h5&gt;Solusi 1&lt;/h5&gt;
&lt;p&gt;Gunakan array kosong sebagai &lt;em&gt;initial value&lt;/em&gt; .&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;buah&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setBuah&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Karena sebuah &lt;em&gt;array&lt;/em&gt; walaupun kosong, tetap memiliki properti &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt;. Sehingga tidak akan memunculkan pesan &lt;em&gt;error&lt;/em&gt;. Array kosong yang dikenai &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; juga tidak akan me-&lt;em&gt;return&lt;/em&gt; apapun&lt;/p&gt;
&lt;h5&gt;Solusi 2&lt;/h5&gt;
&lt;p&gt;Gunakan operator &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;buah &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; buah&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; item &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;dengan begitu, JS akan melihat terlebih dahulu nilai dari &lt;code class=&quot;language-text&quot;&gt;buah&lt;/code&gt;.
Jika nilai dari &lt;code class=&quot;language-text&quot;&gt;buah&lt;/code&gt; masih &lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt;, JS tidak akan meneruskan untuk menjalakan &lt;code class=&quot;language-text&quot;&gt;buah.map( ... )&lt;/code&gt;. Sehingga tidak akan terjadi error&lt;/p&gt;
&lt;p&gt;Jika nilai dari &lt;code class=&quot;language-text&quot;&gt;buah&lt;/code&gt; sudah ada (dalam bentuk array), maka JS akan meneruskan untuk menjalankan &lt;code class=&quot;language-text&quot;&gt;buah.map( ... )&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Hal ini dikarenakan operator &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; akan mereturn &lt;em&gt;first falsy value&lt;/em&gt;. Lebih jauh bisa dipahami &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND&quot;&gt;disini&lt;/a&gt;&lt;/p&gt;
&lt;h5&gt;Solusi 3&lt;/h5&gt;
&lt;p&gt;Gunakan &lt;em&gt;optional chaining&lt;/em&gt;.
Sebenarnya ini sama dengan solusi 2, namun penulisannya bisa lebih singkat.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;buah&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; item &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Lebih jauh tentang &lt;em&gt;optional chaining&lt;/em&gt; bisa dilihat &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining&quot;&gt;disini&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Sekian artikel kali ini, semoga bermanfaat, terimakasih.
Support dan diskusi di tweet ini ðŸ‘‡ðŸ‘‡ðŸ‘‡&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Halloo, my first blog post here&lt;a href=&quot;https://t.co/6VGwaiQPA1&quot;&gt;https://t.co/6VGwaiQPA1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Gal (@gpwisnujati) &lt;a href=&quot;https://twitter.com/gpwisnujati/status/1501414602017755137?ref_src=twsrc%5Etfw&quot;&gt;March 9, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content:encoded></item><item><title><![CDATA[Behind 'Error : Cannot read property 'map' of undefined']]></title><description><![CDATA[When we develop a web app using React, we frequently accept an error message: Whatâ€™s happened and how to solve it? Whatâ€™s the cause? inâ€¦]]></description><link>https://gatsby-starter-blog-demo.netlify.app/error-map-en/</link><guid isPermaLink="false">https://gatsby-starter-blog-demo.netlify.app/error-map-en/</guid><pubDate>Wed, 09 Mar 2022 00:00:00 GMT</pubDate><content:encoded>&lt;p&gt;When we develop a web app using React, we frequently accept an error message:&lt;/p&gt;
&lt;!-- Ketika sedang mendevelop aplikasi web berbasis React JS, seringkali kita mendapatkan pesan error seperti berikut : --&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error : Cannot read property &amp;#39;map&amp;#39; of undefined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- Apa sebenarnya yang terjadi, apa penyebabnya, dan bagaimana solusinya?
check it out --&gt;
&lt;p&gt;Whatâ€™s happened and how to solve it?&lt;/p&gt;
&lt;!-- #### Apa penyebabnya? --&gt;
&lt;h4&gt;Whatâ€™s the cause?&lt;/h4&gt;
&lt;!-- Pada JavaScript, `map` adalah properti yang **HANYA** dimiliki oleh variabel dengan tipe data _array_. Sehingga jika terdapat variabel selain _array_, lalu dikenai `map` maka akan muncul pesan _error_. Contoh : --&gt;
&lt;p&gt;in Javascript, &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; is a property that is only had by a variable with type &lt;em&gt;array&lt;/em&gt;. Thus, if there is a non-&lt;em&gt;array&lt;/em&gt; variable that meets &lt;code class=&quot;language-text&quot;&gt;.map&lt;/code&gt;, would cause an error.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;some string&quot;&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// ERROR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;a&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;b&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// NO ERROR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- walaupun array kosong, tidak akan menghasilkan _error_ --&gt;
&lt;p&gt;Although the array is empty, it would not cause an error&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// TIDAK ERROR&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- Nah, sekarang jika variabel dengan tipe data `undefined` dikenai `map` maka akan muncul pesan error **seperti pada judul artikel ini** .
Seperti pada contoh berikut ini: --&gt;
&lt;p&gt;Thus, when a variable with type undefined meets map, this error message will appear&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; hihi &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;

hihi&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token comment&quot;&gt;// ERROR&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;// Cannot read property &apos;map&apos; of undefined&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- Itulah makna dari kata-kata : --&gt;
&lt;p&gt;Thatâ€™s is the meaning of&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error : Cannot read property &amp;#39;map&amp;#39; of undefined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- &gt; Saya sudah meng-assign array ke variabel tersebut, tapi kenapa tetap muncul pesan error tersebut? --&gt;
&lt;blockquote&gt;
&lt;p&gt;I have assigned an array to the variable, why does the error message still appear?&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- Kasus-kasus seperti ini yang sering terjadi ketika sedang mendevelop aplikasi web berbasis React JS. Pertanyaanya adalah, mana yang lebih dulu berjalan? Apakah _assign_-nya dulu atau `map` nya dulu? Jangan-jangan ketika `map` nya dijalankan, variablenya belum di-_assign_ dengan sebuah _array_? --&gt;
&lt;p&gt;Such a case frequently happens when we work with React JS. The question is, which one was executed earlier? The assignment or the &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt;?&lt;/p&gt;
&lt;!-- Mari kita tinjau contoh komponen berikut: --&gt;
&lt;p&gt;Letâ€™s observe this component :&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;  &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;fruits&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setFruits&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;useEffect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        fetchData&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;setFruits&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;res&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;token comment&quot;&gt;// res.data berisi array&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; fruits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;div&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!--
Pada contoh di atas, kita sudah meng-_assign_ variabel `buah` dengan sebuah _array_, namun akan tetap muncul pesan _error_ --&gt;
&lt;p&gt;On the example above, we already assign an array to the &lt;code class=&quot;language-text&quot;&gt;fruits&lt;/code&gt;, but this error message still appear&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;Error : Cannot read property &amp;#39;map&amp;#39; of undefined&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- Kenapa bisa begitu? --&gt;
&lt;p&gt;Why?&lt;/p&gt;
&lt;!-- &gt; Ingat bahwa pada React JS, `useEffect` baru dieksekusi SETELAH render. --&gt;
&lt;blockquote&gt;
&lt;p&gt;Note that, in React JS, &lt;code class=&quot;language-text&quot;&gt;useEffect&lt;/code&gt; is executed AFTER the component rendered&lt;/p&gt;
&lt;/blockquote&gt;
&lt;!-- Jadi ketika komoponen di atas dipanggil, pertama-tama React akan merender komponen tersebut (termasuk pada bagian `buah.map(...)` ). Setelah render yang pertama, React baru menjalankan `useEffect`. --&gt;
&lt;!--
Sehingga ketika `map` nya dijalankan, variablenya BELUM di-_assign_ dengan sebuah _array_. Itulah mengapa muncul pesan error tersebut --&gt;
&lt;p&gt;As a consequence, when those components are called, React will render the component (including &lt;code class=&quot;language-text&quot;&gt;fruits.map(...)&lt;/code&gt;). After the initial render, React executes &lt;code class=&quot;language-text&quot;&gt;useEffect&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Therefore, when &lt;code class=&quot;language-text&quot;&gt;fruits.map(...)&lt;/code&gt; is executed, the variable &lt;code class=&quot;language-text&quot;&gt;fruits&lt;/code&gt; have not been assigned yet with an &lt;em&gt;array&lt;/em&gt;. Thatâ€™s why the error message appeared&lt;/p&gt;
&lt;h4&gt;How to solve?&lt;/h4&gt;
&lt;h5&gt;Solution 1&lt;/h5&gt;
&lt;!-- Gunakan array kosong sebagai _initial value_ . --&gt;
&lt;p&gt;Use empty &lt;em&gt;array&lt;/em&gt; as &lt;em&gt;intial state&lt;/em&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;buah&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; setBuah&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;useState&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;!-- Karena sebuah _array_ walaupun kosong, tetap memiliki properti `map`. Sehingga tidak akan memunculkan pesan _error_. Array kosong yang dikenai `map` juga tidak akan me-_return_ apapun --&gt;
&lt;p&gt;Since an &lt;code class=&quot;language-text&quot;&gt;array&lt;/code&gt;, even if empty, also has a property &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt;. Thus, this would not cause an error. An empty array that is meet map, would return nothing&lt;/p&gt;
&lt;h5&gt;Solution 2&lt;/h5&gt;
&lt;p&gt;Use &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;fruits &lt;span class=&quot;token operator&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; fruits&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thus, JS will check the value of &lt;code class=&quot;language-text&quot;&gt;fruits&lt;/code&gt;. If the value of &lt;code class=&quot;language-text&quot;&gt;fruits&lt;/code&gt; is &lt;code class=&quot;language-text&quot;&gt;undefined&lt;/code&gt;, JS will not continue to execute &lt;code class=&quot;language-text&quot;&gt;fruits.map(...)&lt;/code&gt;. So that would not cause an error.&lt;/p&gt;
&lt;p&gt;If the value of &lt;code class=&quot;language-text&quot;&gt;fruits&lt;/code&gt; has been assigned (with array), JS will continue to execute &lt;code class=&quot;language-text&quot;&gt;fruits.map(...)&lt;/code&gt;&lt;/p&gt;
&lt;!-- dengan begitu, JS akan melihat terlebih dahulu nilai dari `buah`.
Jika nilai dari `buah` masih `undefined`, JS tidak akan meneruskan untuk menjalakan `buah.map( ... )`. Sehingga tidak akan terjadi error --&gt;
&lt;!-- Jika nilai dari `buah` sudah ada (dalam bentuk array), maka JS akan meneruskan untuk menjalankan `buah.map( ... )` --&gt;
&lt;!-- Hal ini dikarenakan operator `&amp;&amp;` akan mereturn _first falsy value_. Lebih jauh bisa dipahami [disini](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND) --&gt;
&lt;p&gt;This is because the &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&amp;amp;&lt;/code&gt; operator always returns the &lt;em&gt;first falsy value&lt;/em&gt;. You can see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND&quot;&gt;here&lt;/a&gt; for more explanations&lt;/p&gt;
&lt;h5&gt;Solution 3&lt;/h5&gt;
&lt;p&gt;Use &lt;em&gt;optional chaining&lt;/em&gt;.&lt;/p&gt;
&lt;!-- Sebenarnya ini sama dengan solusi 2, namun penulisannya bisa lebih singkat. --&gt;
&lt;p&gt;Actually, this is same with Solution 2, but with shorter writing&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;fruits&lt;span class=&quot;token operator&quot;&gt;?.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;item&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&gt;&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;item&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt;li&lt;span class=&quot;token operator&quot;&gt;&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;You can see &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining&quot;&gt;here&lt;/a&gt; for more explanations&lt;/p&gt;
&lt;p&gt;Hope you enjoyed this blog. Support and comment here ðŸ‘‡ðŸ‘‡ðŸ‘‡&lt;/p&gt;
&lt;blockquote class=&quot;twitter-tweet&quot;&gt;&lt;p lang=&quot;en&quot; dir=&quot;ltr&quot;&gt;Halloo, my first blog post here&lt;a href=&quot;https://t.co/6VGwaiQPA1&quot;&gt;https://t.co/6VGwaiQPA1&lt;/a&gt;&lt;/p&gt;&amp;mdash; Gal (@gpwisnujati) &lt;a href=&quot;https://twitter.com/gpwisnujati/status/1501414602017755137?ref_src=twsrc%5Etfw&quot;&gt;March 9, 2022&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&quot;https://platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;</content:encoded></item></channel></rss>