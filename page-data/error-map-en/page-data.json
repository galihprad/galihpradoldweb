{"componentChunkName":"component---src-templates-blog-post-js","path":"/error-map-en/","result":{"data":{"site":{"siteMetadata":{"title":"Galih Blog"}},"markdownRemark":{"id":"cf48d06e-ba9c-5a1b-824e-a7237c9ddbe9","excerpt":"When we develop a web app using React, we frequently accept an error message: What’s happened and how to solve it? What’s the cause? in Javascript,  is a…","html":"<p>When we develop a web app using React, we frequently accept an error message:</p>\n<!-- Ketika sedang mendevelop aplikasi web berbasis React JS, seringkali kita mendapatkan pesan error seperti berikut : -->\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Error : Cannot read property &#39;map&#39; of undefined</code></pre></div>\n<!-- Apa sebenarnya yang terjadi, apa penyebabnya, dan bagaimana solusinya?\ncheck it out -->\n<p>What’s happened and how to solve it?</p>\n<!-- #### Apa penyebabnya? -->\n<h4>What’s the cause?</h4>\n<!-- Pada JavaScript, `map` adalah properti yang **HANYA** dimiliki oleh variabel dengan tipe data _array_. Sehingga jika terdapat variabel selain _array_, lalu dikenai `map` maka akan muncul pesan _error_. Contoh : -->\n<p>in Javascript, <code class=\"language-text\">map</code> is a property that is only had by a variable with type <em>array</em>. Thus, if there is a non-<em>array</em> variable that meets <code class=\"language-text\">.map</code>, would cause an error.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> hihi <span class=\"token operator\">=</span> <span class=\"token string\">\"some string\"</span>\n\nhihi<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// ERROR</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> hihi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"a\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"b\"</span><span class=\"token punctuation\">]</span>\n\nhihi<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// NO ERROR</span></code></pre></div>\n<!-- walaupun array kosong, tidak akan menghasilkan _error_ -->\n<p>Although the array is empty, it would not cause an error</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> hihi <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n\nhihi<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// TIDAK ERROR</span></code></pre></div>\n<!-- Nah, sekarang jika variabel dengan tipe data `undefined` dikenai `map` maka akan muncul pesan error **seperti pada judul artikel ini** .\nSeperti pada contoh berikut ini: -->\n<p>Thus, when a variable with type undefined meets map, this error message will appear</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> hihi <span class=\"token operator\">=</span> <span class=\"token keyword\">undefined</span>\n\nhihi<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span> <span class=\"token operator\">...</span> <span class=\"token punctuation\">)</span> <span class=\"token comment\">// ERROR</span>\n<span class=\"token comment\">// Cannot read property 'map' of undefined</span></code></pre></div>\n<!-- Itulah makna dari kata-kata : -->\n<p>That’s is the meaning of</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Error : Cannot read property &#39;map&#39; of undefined</code></pre></div>\n<!-- > Saya sudah meng-assign array ke variabel tersebut, tapi kenapa tetap muncul pesan error tersebut? -->\n<blockquote>\n<p>I have assigned an array to the variable, why does the error message still appear?</p>\n</blockquote>\n<!-- Kasus-kasus seperti ini yang sering terjadi ketika sedang mendevelop aplikasi web berbasis React JS. Pertanyaanya adalah, mana yang lebih dulu berjalan? Apakah _assign_-nya dulu atau `map` nya dulu? Jangan-jangan ketika `map` nya dijalankan, variablenya belum di-_assign_ dengan sebuah _array_? -->\n<p>Such a case frequently happens when we work with React JS. The question is, which one was executed earlier? The assignment or the <code class=\"language-text\">map</code>?</p>\n<!-- Mari kita tinjau contoh komponen berikut: -->\n<p>Let’s observe this component :</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>fruits<span class=\"token punctuation\">,</span> setFruits<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">undefined</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token function\">useEffect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        fetchData<span class=\"token operator\">...</span>\n        <span class=\"token function\">setFruits</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// res.data berisi array</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n    <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n      <span class=\"token punctuation\">{</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n  <span class=\"token punctuation\">)</span></code></pre></div>\n<!--\nPada contoh di atas, kita sudah meng-_assign_ variabel `buah` dengan sebuah _array_, namun akan tetap muncul pesan _error_ -->\n<p>On the example above, we already assign an array to the <code class=\"language-text\">fruits</code>, but this error message still appear</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Error : Cannot read property &#39;map&#39; of undefined</code></pre></div>\n<!-- Kenapa bisa begitu? -->\n<p>Why?</p>\n<!-- > Ingat bahwa pada React JS, `useEffect` baru dieksekusi SETELAH render. -->\n<blockquote>\n<p>Note that, in React JS, <code class=\"language-text\">useEffect</code> is executed AFTER the component rendered</p>\n</blockquote>\n<!-- Jadi ketika komoponen di atas dipanggil, pertama-tama React akan merender komponen tersebut (termasuk pada bagian `buah.map(...)` ). Setelah render yang pertama, React baru menjalankan `useEffect`. -->\n<!--\nSehingga ketika `map` nya dijalankan, variablenya BELUM di-_assign_ dengan sebuah _array_. Itulah mengapa muncul pesan error tersebut -->\n<p>As a consequence, when those components are called, React will render the component (including <code class=\"language-text\">fruits.map(...)</code>). After the initial render, React executes <code class=\"language-text\">useEffect</code></p>\n<p>Therefore, when <code class=\"language-text\">fruits.map(...)</code> is executed, the variable <code class=\"language-text\">fruits</code> have not been assigned yet with an <em>array</em>. That’s why the error message appeared</p>\n<h4>How to solve?</h4>\n<h5>Solution 1</h5>\n<!-- Gunakan array kosong sebagai _initial value_ . -->\n<p>Use empty <em>array</em> as <em>intial state</em></p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">[</span>buah<span class=\"token punctuation\">,</span> setBuah<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">useState</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<!-- Karena sebuah _array_ walaupun kosong, tetap memiliki properti `map`. Sehingga tidak akan memunculkan pesan _error_. Array kosong yang dikenai `map` juga tidak akan me-_return_ apapun -->\n<p>Since an <code class=\"language-text\">array</code>, even if empty, also has a property <code class=\"language-text\">map</code>. Thus, this would not cause an error. An empty array that is meet map, would return nothing</p>\n<h5>Solution 2</h5>\n<p>Use <code class=\"language-text\">&amp;&amp;</code> operator</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">fruits <span class=\"token operator\">&amp;&amp;</span> fruits<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Thus, JS will check the value of <code class=\"language-text\">fruits</code>. If the value of <code class=\"language-text\">fruits</code> is <code class=\"language-text\">undefined</code>, JS will not continue to execute <code class=\"language-text\">fruits.map(...)</code>. So that would not cause an error.</p>\n<p>If the value of <code class=\"language-text\">fruits</code> has been assigned (with array), JS will continue to execute <code class=\"language-text\">fruits.map(...)</code></p>\n<!-- dengan begitu, JS akan melihat terlebih dahulu nilai dari `buah`.\nJika nilai dari `buah` masih `undefined`, JS tidak akan meneruskan untuk menjalakan `buah.map( ... )`. Sehingga tidak akan terjadi error -->\n<!-- Jika nilai dari `buah` sudah ada (dalam bentuk array), maka JS akan meneruskan untuk menjalankan `buah.map( ... )` -->\n<!-- Hal ini dikarenakan operator `&&` akan mereturn _first falsy value_. Lebih jauh bisa dipahami [disini](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND) -->\n<p>This is because the <code class=\"language-text\">&amp;&amp;</code> operator always returns the <em>first falsy value</em>. You can see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Logical_AND\">here</a> for more explanations</p>\n<h5>Solution 3</h5>\n<p>Use <em>optional chaining</em>.</p>\n<!-- Sebenarnya ini sama dengan solusi 2, namun penulisannya bisa lebih singkat. -->\n<p>Actually, this is same with Solution 2, but with shorter writing</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">fruits<span class=\"token operator\">?.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span> <span class=\"token punctuation\">{</span>item<span class=\"token punctuation\">}</span> <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>You can see <a href=\"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Optional_chaining\">here</a> for more explanations</p>\n<p>Hope you enjoyed this blog. Support and comment here 👇👇👇</p>\n<blockquote class=\"twitter-tweet\"><p lang=\"en\" dir=\"ltr\">Halloo, my first blog post here<a href=\"https://t.co/6VGwaiQPA1\">https://t.co/6VGwaiQPA1</a></p>&mdash; Gal (@gpwisnujati) <a href=\"https://twitter.com/gpwisnujati/status/1501414602017755137?ref_src=twsrc%5Etfw\">March 9, 2022</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>","frontmatter":{"title":"Behind 'Error : Cannot read property 'map' of undefined'","date":"March 09, 2022","description":"What happened behind this error?"}}},"pageContext":{"slug":"/error-map-en/","previous":null,"next":{"fields":{"slug":"/error-map/"},"frontmatter":{"title":"Dibalik 'Error : Cannot read property 'map' of undefined'"}}}},"staticQueryHashes":["2644053420","2841359383"]}